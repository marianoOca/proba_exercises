return( c(mu-sqrt(mu*(1-mu)/n), mu+sqrt(mu*(1-mu)/n)) )
}
c(mu-sqrt(mu*(1-mu)/n), mu+sqrt(mu*(1-mu)/n))
z <- qnorm(.1)
c(mu-z*sqrt(mu*(1-mu)/n), mu+z*sqrt(mu*(1-mu)/n))
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2, n)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
mu <- 0.6
n <- 100
z <- qnorm(.1)
c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n))
mu <- 0.6
n <- 1000
z <- qnorm(.1)
c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n))
z <- qnorm(.1)
z <- qnorm(.05)
c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n))
z <- qnorm(1-.05)
#9.c.
z <- qnorm(1-0.05)
(2*z)^2
(2*z/.02)^2
mu <- 0.6
n <- 1000
z <- qnorm(0.05)
c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n))
#9.c.
z <- qnorm(1-0.05)
(mu*(1-mu))*(2*z/0.02)^2
#1.e.b.1
setwd("C:/Users/maria/Desktop/Taller/Proba/")
nivelAsintotico <- 0.90
alpha <- 1 - nivelAsintotico
intBin(alpha, encuestaA)
#9.d.
encuestaA <- read.table("DatosP8/datosP8ej9_1000.csv", header = TRUE)
encuestaB <- read.table("DatosP8/datosP8ej9_6494.csv", header = TRUE)
nivelAsintotico <- 0.90
View(encuestaA)
encuestaA == "en contra"
intBin(alpha, encuestaA == "en contra")
intBin(alpha, encuestaA)
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2, n)
return( c(mu-z*sqrt(mu*(1-mu)/n), mu+z*sqrt(mu*(1-mu)/n)) )
}
intBin(alpha, encuestaA == "en contra")
intBin(alpha, encuestaB == "en contra")
sum(encuestaA == "en contra")
sum(encuestaA == "en contra")/length(encuestaA)
sum(encuestaA == "en contra")/length(encuestaA == "en contra")
z <- qnorm(alpha/2, length(encuestaA == "en contra"))
z <- qnorm(alpha/2, 1000)
z <- qnorm(alpha/2)
#Intervalo de confianza de la esperanza (mu) sabiendo la varianza (sigma)
intMuConVar <- function(sigma, alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return(c(mu+z*sqrt(sigma/n), mu-z*sqrt(sigma/n)))
}
Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu-z*sqrt(mu*(1-mu)/n), mu+z*sqrt(mu*(1-mu)/n)) )
}
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu-z*sqrt(mu*(1-mu)/n), mu+z*sqrt(mu*(1-mu)/n)) )
}
intBin(alpha, encuestaB == "en contra")
intBin(alpha, encuestaA == "en contra")
intervaloA <- intBin(alpha, encuestaA == "en contra")
largoA = intervaloA[2] - intervaloA[1]
largoA
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu1=-z*sqrt(mu*(1-mu)/n)) )
}
nivelAsintotico <- 0.90
alpha <- 1 - nivelAsintotico
intervaloA <- intBin(alpha, encuestaA == "en contra")
largoA = intervaloA[2] - intervaloA[1]
largoA
intervaloA
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu1-z*sqrt(mu*(1-mu)/n)) )
}
intervaloA <- intBin(alpha, encuestaA == "en contra")
largoA = intervaloA[2] - intervaloA[1]
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu1-z*sqrt(mu*(1-mu)/n)) )
}
intervaloA <- intBin(alpha, encuestaA == "en contra")
intBin(alpha, encuestaA == "en contra")
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
intervaloA <- intBin(alpha, encuestaA == "en contra")
largoA = intervaloA[2] - intervaloA[1]
largoA
intervaloB <- intBin(alpha, encuestaB == "en contra")
largoB = intervaloB[2] - intervaloB[1]
largoB
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)-1
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
intervaloB <- intBin(alpha, encuestaB == "en contra")
largoB = intervaloB[2] - intervaloB[1]
largoB
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)-3
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
intervaloB <- intBin(alpha, encuestaB == "en contra")
largoB = intervaloB[2] - intervaloB[1]
largoB
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)-2
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
intervaloB <- intBin(alpha, encuestaB == "en contra")
largoB = intervaloB[2] - intervaloB[1]
largoB
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)-1
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
intervaloB <- intBin(alpha, encuestaB == "en contra")
largoB = intervaloB[2] - intervaloB[1]
largoB
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
Inf(sqrt())
##Intervalo de confianza para p de una Binomial
intBin <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return( c(mu+z*sqrt(mu*(1-mu)/n), mu-z*sqrt(mu*(1-mu)/n)) )
}
s
info(sqrt)
##Intervalo de confianza para b de una U(0, b)
intUni <- function(alpha, datos){
n <- length(datos)
mayor <- max(datos)
return(c(mayor, mayor/(alpha^(1/n))))
}
#13.
X <- c(0.44, -1.63, 2.59, 1.54, 0.45, -0.13, -2.76, -1.53)
Y <- c(0.06, -0.24, 4.65, 2.27, 3.88, 2.35, 3.92, -0.73)
nivel <- 0.95
alpha <- 1 - nivel
intMuSinVar(alpha, X)
intMuSinVar(alpha, Y)
intMuSinVar(alpha, X-Y)
intPoi <- function(alpha, datos){
mu <- mean(datos)
n <- length(datos)
z <- qnorm(alpha/2)
return(c(mu+z*sqrt(mu/n), mu-z*sqrt(mu/n)))
}
#11.b.
llama <- c(40, 46, 46, 45, 42, 44, 50, 31, 41, 42, 50, 34, 62, 32, 46, 50,
39, 42, 44, 41, 47, 42, 41, 50, 34, 47, 38, 40, 44, 45, 35, 51,
38, 41, 39, 34, 48, 35, 40, 40, 43, 36, 40, 49, 45, 47, 34, 45)
alpha <- 0.05
#11.b.
llamadas <- c(40, 46, 46, 45, 42, 44, 50, 31, 41, 42, 50, 34, 62, 32, 46, 50,
39, 42, 44, 41, 47, 42, 41, 50, 34, 47, 38, 40, 44, 45, 35, 51,
38, 41, 39, 34, 48, 35, 40, 40, 43, 36, 40, 49, 45, 47, 34, 45)
alpha <- 0.05
intPoi(alpha, llamadas)
#1.b.
rendimiento <- c(37, 39.50, 41.70, 42, 40, 41.25, 43, 44.05, 38, 38.50)
mean(rendimiento)
qnorm(0.05)
qnorm(1-0.05)
p_valor <- pnorm(mu, 37, 25)
mu <- mean(rendimiento)
p_valor <- pnorm(mu, 37, 25)
p_valor <- pnorm(2.213)
p_valor <-1 - pnorm(2.213)
alpha <- 0.05
mu <- mean(rendimiento)
corte <- qnorm(1-aplha)
corte <- qnorm(1-alpha)
p_valor <-1 - pnorm(corte)
p_valor <- pnorm(mu, 37, 25)
p_valor <- 1 - pnorm(corte)
corte <- qnorm(1-alpha)
alpha <- 0.05
mu <- mean(rendimiento)
corte <- qnorm(1-alpha)
n <- lenght(rendimiento)
z <- (40.5 - 37)/sqrt(25/10)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- 1 - pnorm(z)
EII <- 1 - pnorm(z+corte)
z <- (40 - 40.5)/sqrt(25/10)
EII <- 1 - pnorm(z + corte)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- 1 - pnorm(z + corte)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- pnorm(z + corte)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- pnorm(z + corte)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
#Prob. error tipo 2
EII <- 1 - pnorm(40, 40, 25)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- pnorm(z + corte)
z <- (40.5 - 40)/sqrt(25/10)
#Prob. error tipo 2
EII <- 1 - pnorm(40.5, 40, 25)
EII <- pnorm(z + corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- pnorm(z + corte)
rendimiento <- c(37, 39.50, 41.70, 42, 40, 41.25, 43, 44.05, 38, 38.50)
alpha <- 0.05
n <- lenght(rendimiento)
mu <- mean(rendimiento)
corte <- qnorm(1-alpha)
z <- (40.5 - 40)/sqrt(25/10)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- pnorm(z + corte)
p_valor <- pnorm(mu, 37, 25)
p_valor <- 1 - pnorm(corte)
z <- (40 - 40.5)/sqrt(25/10)
z <- (40 - mu)/sqrt(25/10)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- pnorm(z + corte)
EII2 <- pnorm(z)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- pnorm(z)+corte
EII2 <- pnorm(z+corte)
z0 <- (37 - mu)/sqrt(25/10)
Xn <- mean(rendimiento)
z0 <- (Xn - 37)/sqrt(25/10)
rendimiento <- c(37, 39.50, 41.70, 42, 40, 41.25, 43, 44.05, 38, 38.50)
alpha <- 0.05
n <- lenght(rendimiento)
Xn <- mean(rendimiento)
corte <- qnorm(1-alpha)
z0 <- (Xn - 37)/sqrt(25/n)
z1 <- (Xn - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
potencia <- 1 - pnorm(z1 + corte)
z1 <- (Xn - 40)/sqrt(25/n)
rendimiento <- c(37, 39.50, 41.70, 42, 40, 41.25, 43, 44.05, 38, 38.50)
alpha <- 0.05
n <- lenght(rendimiento)
Xn <- mean(rendimiento)
corte <- qnorm(1-alpha)
z0 <- (Xn - 37)/sqrt(25/n)
z1 <- (Xn - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
rendimiento <- c(37, 39.50, 41.70, 42, 40, 41.25, 43, 44.05, 38, 38.50)
alpha <- 0.05
n <- length(rendimiento)
Xn <- mean(rendimiento)
corte <- qnorm(1-alpha)
z0 <- (Xn - 37)/sqrt(25/n)
z1 <- (Xn - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
potencia <- 1 - pnorm(z1 + corte)
EII2 <- pnorm(z+corte)
EII2 <- 1 - potencia
n <- length(rendimiento) + 100
potencia <- 1 - pnorm(z1 + corte)
EII2 <- 1 - potencia
z1 <- (Xn - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
potencia <- 1 - pnorm(z1 + corte)
EII2 <- 1 - potencia
EII2 <- 1 - pnorm(z1 + corte)
z1 <- (37 - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- 1 - pnorm(z1 + corte)
n <- length(rendimiento)
Xn <- mean(rendimiento)
corte <- qnorm(1-alpha)
z0 <- (Xn - 37)/sqrt(25/n)
z1 <- (37 - 40)/sqrt(25/n)
#Prob. error tipo 1
EI <- 1 - pnorm(corte)
#Prob. error tipo 2
EII1 <- 1 - pnorm(40.5, 40, 25)
EII2 <- 1 - pnorm(z1 + corte)
EII2 <- pnorm(z1 + corte)
pnorm(0.26)
pnorm(-0.26)
z1 + corte
qnorm(0.05)
qnorm(0.05)-corte
((qnorm(0.05)-corte)*5/(37-40))^2
#Prob. error tipo 2 con mu = 40
n <- 30
z1 <- (37 - 40)/sqrt(25/n)
EII <- pnorm(z1 + corte)
#Prob. error tipo 2 con mu = 40
n <- 31
z1 <- (37 - 40)/sqrt(25/n)
EII <- pnorm(z1 + corte)
norm(0.5)
qnorm(0.5)
qnorm(0.5-0.05)
qnorm(0.5-0.05, 300)
qnorm(0.5, 300)
#2.a.
qnorm(0.45)
pvalor <- 1 - pnorm(4.899)
1 - pnorm(4.899)
qnorm(1-0.05)
1 - pnorm(1.4142)
pnorm(0.41796)
qnorm(0.05)
qnorm(0.05)*2
(qnorm(0.05)*2/(1/3-3/sqrt(51)))^2
#4.
qnorm(1-0.05)
pnorm(1.644854)
qnorm(0.95)
pnorm(0.37947)
#6.a
setwd("C:/Users/maria/Desktop/Taller/Proba/")
dados <- scan("DatosP9/dados.txt")
dados <- scan("DatosP9/dado.txt")
dados <- scan("DatosP9/dado.txt")
mean(dados)
mean(dados % 2  == 0)
6 mod 2
mod(6,2)
mean(mod(dados, 2)  == 0)
mean(dados %% 2  == 0)
6 %% 2
S <- ds(datos)
S <- sd(datos)
S <- sd(dados)
setwd("C:/Users/maria/Desktop/Taller/Proba/")
dados <- scan("DatosP9/dado.txt")
# Distribución desconocida y H0: mu = 1/2 vs. H1: mu != 1/2
alpha <- 0.05
mu0 <- 1/2
Xn <- mean(dados %% 2  == 0)
S <- sd(dados)
corte <- qnorm(alpha/2)
z1 <- qnorm(alpha/2)
z1 <- qnorm(1-alpha/2)
# Distribución desconocida y H0: mu = 1/2 vs. H1: mu != 1/2
alpha <- 0.05
mu0 <- 1/2
Xn <- mean(dados %% 2  == 0)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z1 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z
setwd("C:/Users/maria/Desktop/Taller/Proba/")
dados <- scan("DatosP9/dado.txt")
# Distribución desconocida y H0: mu = 1/2 vs. H1: mu != 1/2
alpha <- 0.05
mu0 <- 1/2
Xn <- mean(dados %% 2  == 0)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z
#No hay evidencia suficiente para rechazar H0 en favor de H1
#p-valor
1 - pnorm(Z)
#p-valor
pnorm(Z)
#p-valor
pnorm(Z)
#p-valor
2*(1-pnorm(Z))
#p-valor
p_valor <- 2*(1-pnorm(Z))
Xn <- mean(dados <= 3)
#6.b
# Distribución desconocida y H0: mu = 1/2 vs. H1: mu != 1/2
alpha <- 0.05
mu0 <- 1/2
Xn <- mean(dados <= 3)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z # false, no rechazamos H0
#p-valor
p_valor <- 2*(1-pnorm(Z)) #p-valor > alpha, no rechazamos H0
#p-valor
p_valor <- 2*pnorm(Z) #p-valor > alpha, no rechazamos H0
alpha <- 0.05
mu0 <- 1/6
Xn <- mean(dados == 3)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z # false, no rechazamos H0
#p-valor
p_valor <- 2*pnorm(Z) #p-valor > alpha, no rechazamos H0
alpha <- 0.05
mu0 <- 1/6
Xn <- mean(dados == 2)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z # false, no rechazamos H0
#p-valor
p_valor <- 2*pnorm(Z) #p-valor > alpha, no rechazamos H0
alpha <- 0.05
mu0 <- 1/6
Xn <- mean(dados == 2)
n <- length(dados)
S <- sd(dados)
z1 <- qnorm(alpha/2)
z2 <- qnorm(1-alpha/2)
Z <- (Xn - mu0)*sqrt(n)/S
#Rechazamos H0
Z <= z1 || z2 <= Z # false, no rechazamos H0
#p-valor
p_valor <- 2*pnorm(Z) #p-valor > alpha, no rechazamos H0
#p-valor
p_valor <- 2*(1-pnorm(Z)) #p-valor > alpha, no rechazamos H0
z2 <- qnorm(1-alpha)
z2 <- qnorm(1-alpha/2)
